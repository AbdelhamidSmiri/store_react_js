import { useEffect, useMemo, useState } from "react";
import Notice from "../Notice/Notice";
import "./Basket.css";
const Basket = ({ color }) => {
    const [count, setCount] = useState(0);

    const getCart = async () => {
        try {
            const cartList = await fetch("https://fakestoreapi.com/carts?userId=1");
            const response = await cartList.json();
            // Assuming setCount is a function to update the state
            // Make sure to define setCount using useState hook before using it
            setCount(response.length);
        } catch (error) {
            console.error("Error fetching cart data:", error);
            // Handle error as needed
        }
    };

    useMemo(() => {
        getCart()
    }, [count]);


    return (
        <>
            <Notice count={count} />
            <svg className="basket" xmlns="http://www.w3.org/2000/svg" version="1.2" baseProfile="tiny" id="Calque_1" x="0px" y="0px" viewBox="0 0 1024 1024" >
                <g>
                    <path fill={color} d="M350.059,281.779c4.135,0,7.258,0,10.381,0c83.41,0,166.82-0.047,250.231,0.033   c21.366,0.02,35.207,19.461,28.036,38.971c-4.198,11.419-14.424,18.556-27.307,18.61c-26.248,0.109-52.496,0.034-78.744,0.035   c-103.242,0-206.484-0.029-309.726,0.024c-21.683,0.011-35.656,18.759-28.635,38.416c4.104,11.491,12.518,17.702,24.25,19.082   c2.881,0.339,5.827,0.112,8.743,0.112c200.943,0.003,401.886,0.006,602.828-0.022c4.068-0.001,8.25,0.186,12.184-0.665   c14.088-3.048,23.595-16.71,22.113-31.185c-1.477-14.432-13.285-25.577-27.987-25.698c-26.246-0.216-52.498,0.152-78.743-0.148   c-14.602-0.167-25.641-5.717-32.662-20.534c-26.624-56.191-54.095-111.957-81.22-167.897c-8.003-16.506-3.373-33.145,11.244-40.768   c14.661-7.646,30.422-1.642,38.495,14.876c24.301,49.726,48.642,99.432,72.622,149.322c2.735,5.69,5.679,7.534,11.767,7.622   c24.458,0.352,49.116-2.76,73.34,1.564c32.285,5.763,54.285,25.637,64.694,57.398c10.439,31.853,3.707,60.961-18.005,86.023   c-3.691,4.26-5.973,8.49-6.792,13.968c-15.902,106.363-31.701,212.744-47.923,319.056c-3.153,20.66-4.594,41.688-11.577,61.666   c-19.58,56.012-71.496,94.183-129.121,94.242c-116.657,0.119-233.314,0.167-349.97,0.063   c-64.826-0.058-122.275-47.05-134.615-111.48c-6.359-33.201-10.003-66.952-14.89-100.452   c-7.352-50.399-14.724-100.795-22.071-151.195c-1.039-7.125-2.157-14.269,0.212-21.362c4.267-12.774,15.751-20.398,29.23-19.421   c12.746,0.924,23.28,10.65,25.503,24.379c2.729,16.853,4.92,33.798,7.372,50.699c9.978,68.789,19.66,137.624,30.076,206.343   c5.413,35.712,42.731,64.863,81.257,64.84c61.537-0.037,123.073-0.078,184.61-0.087c53.954-0.008,107.908,0.017,161.862,0.047   c42.917,0.024,77.029-31.571,83.109-75.315c9.734-70.034,20.361-139.936,30.609-209.894c5.428-37.055,10.578-74.157,16.477-111.132   c1.469-9.208-3.752-7.184-8.333-7.184c-199.776-0.021-399.552,0.006-599.329-0.038c-41.566-0.009-74.598-25.719-84.537-65.479   c-13.184-52.742,25.365-105.783,78.292-107.258c20.692-0.576,41.415-0.405,62.114-0.013c5.82,0.11,8.625-1.739,11.21-7.112   c23.474-48.79,47.243-97.43,71.011-146.069c6.849-14.016,19.147-20.488,32.024-17.228c18.223,4.614,26.895,23.88,18.321,41.776   c-19.031,39.725-38.353,79.302-57.549,118.943C353.154,275.116,351.83,278.01,350.059,281.779z" />
                    <path fill={color} d="M556.543,640.757c-0.006,37.287,0.121,74.575-0.068,111.861c-0.075,14.743-10.826,26.486-24.847,28.045   c-13.667,1.52-26.639-7.477-30.175-21.106c-0.648-2.498-0.867-5.17-0.868-7.762c-0.045-73.991-0.083-147.983,0.003-221.974   c0.018-15.436,10.487-27.322,24.858-28.894c13.784-1.507,26.621,7.331,30.144,21.091c0.851,3.322,0.915,6.909,0.921,10.375   C556.572,568.513,556.548,604.635,556.543,640.757z" />
                    <path fill={color} d="M416.549,640.773c0,27.084,0.047,54.169-0.016,81.253c-0.043,18.256-11.879,30.983-28.413,30.752   c-16.12-0.225-27.545-12.867-27.559-30.734c-0.043-54.169-0.044-108.337,0-162.505c0.015-18.297,11.799-30.952,28.392-30.729   c16.121,0.217,27.538,12.843,27.579,30.711C416.596,586.604,416.549,613.689,416.549,640.773z" />
                    <path fill={color} d="M696.549,640.742c0,27.084,0.046,54.169-0.016,81.253c-0.042,18.273-11.849,30.997-28.383,30.783   c-16.124-0.209-27.575-12.851-27.589-30.704c-0.044-54.169-0.044-108.337,0-162.506c0.015-18.314,11.771-30.966,28.362-30.759   c16.125,0.201,27.567,12.827,27.61,30.68C696.597,586.573,696.549,613.658,696.549,640.742z" />
                </g>
            </svg>
        </>)
}

export default Basket;